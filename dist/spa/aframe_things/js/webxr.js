function init(){AFRAME.utils.device.isMobile()}window.addEventListener("enter-vr",(t=>{AFRAME.utils.device.checkHeadsetConnected()&&document.getElementById("cursor")&&document.getElementById("cursor").remove()})),AFRAME.registerComponent("toggle-handler",{schema:{target:{default:"#"}},init:function(){var t=this.data,e=document.getElementById(t.target);e&&e.setAttribute("visible","false"),this.el.addEventListener("click",(function(){var e=document.getElementById(t.target);let i=e.getAttribute("visible");1==i?e.setAttribute("visible","false"):e.setAttribute("visible","true")}))}}),AFRAME.registerComponent("link-handler",{schema:{target:{default:"#"}},init:function(){var t=this.data;this.el.addEventListener("click",(function(){""!=t.target&&window.open(t.target)}))}}),AFRAME.registerComponent("images-handler",{init:function(){this.data;this.el.addEventListener("click",(function(){let t=this.getAttribute("src");"#image_1"==t?this.setAttribute("src","#image_2"):this.setAttribute("src","#image_1")}))}}),AFRAME.registerComponent("light-map-geometry",{schema:{path:{default:""},format:{default:"RGBFormat"},intensity:{default:1}},init:function(){const t=this.data;this.el;this.texture=(new THREE.TextureLoader).load(t.path),this.intensity=t.intensity,this.applyLightMap(),this.el.addEventListener("object3dset",this.applyLightMap.bind(this))},applyLightMap:function(){const t=this.el.getObject3D("mesh"),e=this.texture;this.texture.flipY=!1;this.el;const i=this.intensity;t&&t.traverse((function(t){t.material&&"lightMap"in t.material&&(t.material.lightMap=e,t.material.lightMapIntensity=i,t.material.needsUpdate=!0)}))}});