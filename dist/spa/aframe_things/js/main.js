let scene,dropzone,fileinput,ui_animation_list,usermodel_entity;function setup_animation_controlled(e){console.log("setup_animation_control"),e.addEventListener("model-loaded",(n=>{console.log("model-loaded",e,n),update_animation_ui(e)}))}function update_animation_ui(e){console.group("update_animation_ui"),console.log("target.getObject3D('mesh')",e.getObject3D("mesh"));const n=e.getObject3D("mesh");n.animations.map((e=>e.name));for(let t of n.animations)console.log(`clip '${t.name}' `,t);ui_animation_list.innerHTML="";for(let t of n.animations){console.log(`clip '${t.name}' `,t);const n=document.createElement("li");ui_animation_list.appendChild(n);const o=document.createElement("span");o.innerHTML=t.name,n.appendChild(o),n.addEventListener("click",(n=>{let o=`clip: ${t.name}; crossFadeDuration: 0.5`;console.log("animation_mixer_option",o),e.setAttribute("animation-mixer",o)})),console.log("li",n)}console.groupEnd()}function init_page(){console.log("init_page"),dropzone=document.getElementById("dropzone"),fileinput=document.getElementById("fileinput"),usermodel_entity=document.getElementById("usermodel_entity"),ui_animation_list=document.getElementById("ui_animation_list"),init_file_handling()}function init_file_handling(){console.log("init_file_handling"),scene.addEventListener("dragenter",(e=>{e.stopPropagation(),e.preventDefault(),dropzone.classList.add("active")}),!1),scene.addEventListener("dragover",(e=>{e.stopPropagation(),e.preventDefault()}),!1),scene.addEventListener("dragleave",(e=>{e.stopPropagation(),e.preventDefault()}),!1),dropzone.addEventListener("dragenter",(e=>{e.stopPropagation(),e.preventDefault()}),!1),dropzone.addEventListener("dragover",(e=>{e.stopPropagation(),e.preventDefault()}),!1),dropzone.addEventListener("dragleave",(e=>{e.stopPropagation(),e.preventDefault(),dropzone.contains(e.relatedTarget)||dropzone.classList.remove("active")}),!1),dropzone.addEventListener("drop",(e=>{e.stopPropagation(),e.preventDefault(),dropzone.classList.remove("active");const n=e.dataTransfer,t=n.files;fileinput.files=t,handleFiles(t)}),!1),fileinput.addEventListener("change",(e=>{handleFiles(fileinput.files)}),!1)}function handleFiles(e){if(e.length>0){const n=e[0];console.log("file",n),file_url=URL.createObjectURL(n),usermodel_entity.setAttribute("gltf-model",file_url)}}AFRAME.registerComponent("animation-controlled",{init:function(){setup_animation_controlled(this.el)}}),AFRAME.registerComponent("init_page",{init:function(){scene=this.el,init_page()}});